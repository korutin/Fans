//Репликация ценных бумаг
Assert(IsOpen('_CONNECT'), 'Форма доступа к данным не открыта');
if not owner->IsVersionCompatible_con then
   Assert(Question('Попытка реплицировать ценную бумагу из базы данных другой версии. '+
         'Желательно установить обновления, чтобы версии были одинаковыми.'+#13+#10+
         'Или всё же хотите попробовать реплицировать на свой страх и риск, без гарантий?'),
      'Попытка реплицировать ценную бумагу из базы данных другой версии. '+
      'Установите обновления, чтобы версии были одинаковыми.')
end;
var  done:=0, Replicated:=0, News:=0, new_Share, s:='', OFICDATE,
   LEVEL_:=LEVEL_Combo.ItemIndex;
_connect.Transfer_Share.WithoutMarket := list();
if _CONNECT.ShareLazy.Value='' then
   StartProgress( 'Репликация данных', 'Ценные бумаги' );
   var ID, cur, all := Extract( 'ИсходныеДанные', 'select count(*) from OD_SHARES s, OD_VALUES v where S.ID=S.SELF_ID and s.ID=v.ID and v.IS_IN<>0');
   DoProgress( 0, cur:=0, all );
   s := iif(LEVEL_Combo.ItemIndex>0, ' (уровень '+LEVEL_Combo.Text+')', '');
   for 'ИсходныеДанные' select 'select s.ID from OD_SHARES s, OD_VALUES v where S.ID=S.SELF_ID and s.ID=v.ID and v.IS_IN<>0'
      into ID
   do
      if LEVEL_Combo.ItemIndex > 0 then //только один уровень ЦБ
         //SelectSQL('ИсходныеДанные', 'select LEVEL_ from OD_VALUES_RATES where VALUE_ID=:ID order by OFICDATE desc', ID, LEVEL_, exit);
         SelectSQL('ИсходныеДанные', 'select OFICDATE from OD_VALUES_RATES where VALUE_ID=:ID order by OFICDATE desc', ID, OFICDATE, exit); //дата последней котировки
         LEVEL_ := LEVEL_Combo.ItemIndex;
         if 0=Extract( 'ИсходныеДанные', 'select count(*) from OD_VALUES_RATES where VALUE_ID=:ID and OFICDATE=:D and LEVEL_=:L', ID, OFICDATE, LEVEL_Combo.ItemIndex) then //есть ли заданный уровень на дату последней котировки
            LEVEL_:=0
         end
      end;
      if LEVEL_=LEVEL_Combo.ItemIndex then
         try
            with 'Данные' do
               new_Share := _connect->Transfer_Share( id,  _CONNECT.RepTypeGroup.ItemIndex,Done );
               if owner.WithRates.Checked then
                   _connect->Transfer_Share_Rates( id, new_Share, _CONNECT.RepTypeGroup.ItemIndex );
               end;
            end;
            if done > 0 then
               inc( Replicated );
               if done = 1 then inc( News ) end
            end
         except
            if not Question(EXCEPTION.Text+' Продолжить репликацию?') then
               exit
               //Replicated:=0; News:=0;
               //propagate;
            end;
         end;
      end;
      DoProgress( 0, inc( cur ), all )
   end;
   DoProgress( 0, all, all );
else
   with 'Данные' do
      new_Share := _connect->Transfer_Share( _CONNECT.ShareLazy.Value,  _CONNECT.RepTypeGroup.ItemIndex,Done );
   end;
   if done > 0 then
       inc( Replicated );
       if done = 1 then inc( News ) end
   end
end;
MetaRefresh('Данные','OD_SHARES');
if Replicated > 0 then
   Message('Всего изменений'+s+': '+Str( Replicated )+' из них добавлено новых: '+Str( News ));
else
   Message('Изменений не было')
end
