// InsFace_t(%Profile_t:int):int
// -----------------------------------------------------------------------------------------------------------------
// Вставка в БД лица представленного во входящем DataSet ,тип TFace
// Во вложенной таблице %Profile_t.__tDModes_DIAL_MODES ожидается обнаружить набор деятельностей присущих хранимому в профиле субъекту
//  на ее основе заполняется таблице БД OD_P_FACES. Если в %Profile_t содержится несколько записей, это интерпретируется как исторические
//  записи относящиеся к хранимому в профиле субъекту. В этом случае деятельности в %Profile_t.__tDModes_DIAL_MODES не разыскиваются, а 
//  игнорируются.
// 
// EKS 01.2020

// Хочешь узнать структуру таблицы %Profile_t вызови _QA->GenRequizFace и в _QA._L2 получишь список полей с типами

var  FACE_ID, FIELDS, _QA_OPER, x_meta, x_modes;

_QA_OPER := 186;
FACE_ID  := clear(0);
FIELDS   := List();

x_meta   := %Profile_t.___tOMETA;
if (LowerCase(x_meta._CLASS)<>'tface') then
    raise('Ошибка: в таблице профиля передан не тип TFace, а какой-то другой');
end;

if (%Profile_t.@RECORDCOUNT=0) then
    raise('Ошибка: в таблице профиля нет записей')
elsif (%Profile_t.@RECORDCOUNT=1) then
    FIELDS := _QA->TableToList(%Profile_t, 0);
    try
        ExecProc('API_INS_FACE', 'Данные', %Profile_t._S_TYPE, %Profile_t._B_DATE, FIELDS, FACE_ID);
        // Если есть виды деятельности - накидаем их в базу
        x_modes := %Profile_t.___tDModes_DIAL_MODES;
        if x_modes.@RECORDCOUNT>0 then
            x_modes.@First;
            While ~(x_modes.@EOF) do
                ExecSQL('Данные', [insert into OD_P_FACES( FACE, DIAL_MODE, NUM_LIC, BEG_LIC, END_LIC, PLACE_LIC)
                                        values (:FACE, :DIAL_MODE, :NUM_LIC, :BEG_LIC, :END_LIC, :PLACE_LIC)],
                                                 FACE_ID, 
                                                 x_modes._MODE, 
                                                 x_modes._NUM_LIC, 
                                                 x_modes._BEG_LIC, 
                                                 x_modes._END_LIC, 
                                                 x_modes._PLACE_LIC);
                x_modes.@NEXT;
            End;
        end;
        x_meta.@EDIT;
        x_meta._ID := FACE_ID;
        x_meta.@POST;
    except
        x_meta.@EDIT;
        x_meta._ID := clear(0);
        x_meta.@POST;
        propagate
    end
else
    TableOrder(%Profile_t, 'B_DATE', 'ASC');
    %Profile_t.@FIRST;
    FIELDS := _QA->TableToList(%Profile_t, 0);
    ExecProc('API_INS_FACE', 'Данные', %Profile_t._S_TYPE, %Profile_t._B_DATE, FIELDS, FACE_ID);
    %Profile_t.@NEXT;    
    While ~(%Profile_t.@EOF) do
        FIELDS := _QA->TableToList(%Profile_t, 0);
        try
            ExecProc('API_UPD_FACE', 'Данные', FACE_ID, %Profile_t._B_DATE, FIELDS);
            x_meta.@EDIT;
            x_meta._ID := FACE_ID;
            x_meta.@POST;
        except
            x_meta.@EDIT;
            x_meta._ID := clear(0);
            x_meta.@POST;
            propagate
        end;
        %Profile_t.@NEXT;
    End;
end;

FACE_ID;